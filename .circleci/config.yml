version: 2.1

orbs:
  android: circleci/android@1.0.3
  flutter-orb: circleci/flutter@1.0

executors:
  mac:
    macos:
      xcode: 12.5.1

jobs:
  integration_test_android:
    executor:
      name: android/android-machine
      resource-class: xlarge
    steps:
      - checkout
      - run:
          name: Create AVD
          command: |
            SYSTEM_IMAGES="system-images;android-29;default;x86"
            DEVICE="pixel_4"
            sdkmanager "$SYSTEM_IMAGES"
            echo "no" | avdmanager --verbose create avd -n test -k "$SYSTEM_IMAGES" -d "$DEVICE"
      - run:
          name: Boot emulator
          command: |
            emulator -avd test -delay-adb -verbose -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
          background: true
      - flutter-orb/install_sdk_and_pub:
          cache-version: v2
      - flutter-orb/install_android_gradle
      - run:
          name: Wait for emulator
          command: |
            circle-android wait-for-boot
      - run:
          name: Disable emulator animation
          command: |
            adb shell settings put global window_animation_scale 0.0
            adb shell settings put global transition_animation_scale 0.0
            adb shell settings put global animator_duration_scale 0.0
      - run:
          name: Integration Test
          command: flutter drive --target=test_driver/app.dart
      - store_artifacts:
          path: ozzie

  distribute_android:
    executor:
      name: android/android-machine
      resource-class: xlarge
    steps:
      - checkout
      - flutter-orb/install_sdk_and_pub:
          cache-version: v2
      - flutter-orb/install_android_gradle
      - flutter-orb/install_android_gem
      - run:
          command: bundle exec fastlane distribute_debug
          working_directory: android

  integration_test_ios:
    executor: mac
    steps:
      - checkout
      - flutter-orb/install_sdk_and_pub
      - flutter-orb/install_ios_pod
      - run:
          name: pre-start simulator
          command: xcrun instruments -w "iPhone 12 (14.5) [" || true
      - run:
          name: Integration Test
          command: flutter drive --target=test_driver/app.dart
      - store_artifacts:
          path: ozzie
    # The resource_class feature allows configuring CPU and RAM resources for each job. Different resource classes are available for different executors. https://circleci.com/docs/2.0/configuration-reference/#resourceclass
    resource_class: large

  distribute_ios:
    executor: mac
    steps:
      - checkout
      - flutter-orb/install_sdk_and_pub
      - flutter-orb/install_ios_pod
      - flutter-orb/install_ios_gem
      - run:
          command: bundle exec fastlane distribute_debug
          working_directory: ios

workflows:
  test_and_distribute:
    jobs:
      - flutter-orb/unit_test
      - flutter-orb/lint
      - integration_test_ios
      - distribute_ios
      - integration_test_android
      - distribute_android
